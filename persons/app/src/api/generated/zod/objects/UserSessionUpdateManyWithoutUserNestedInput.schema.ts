/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { UserSessionCreateWithoutUserInputObjectSchema } from './UserSessionCreateWithoutUserInput.schema';
import { UserSessionUncheckedCreateWithoutUserInputObjectSchema } from './UserSessionUncheckedCreateWithoutUserInput.schema';
import { UserSessionCreateOrConnectWithoutUserInputObjectSchema } from './UserSessionCreateOrConnectWithoutUserInput.schema';
import { UserSessionUpsertWithWhereUniqueWithoutUserInputObjectSchema } from './UserSessionUpsertWithWhereUniqueWithoutUserInput.schema';
import { UserSessionCreateManyUserInputEnvelopeObjectSchema } from './UserSessionCreateManyUserInputEnvelope.schema';
import { UserSessionWhereUniqueInputObjectSchema } from './UserSessionWhereUniqueInput.schema';
import { UserSessionUpdateWithWhereUniqueWithoutUserInputObjectSchema } from './UserSessionUpdateWithWhereUniqueWithoutUserInput.schema';
import { UserSessionUpdateManyWithWhereWithoutUserInputObjectSchema } from './UserSessionUpdateManyWithWhereWithoutUserInput.schema';
import { UserSessionScalarWhereInputObjectSchema } from './UserSessionScalarWhereInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.UserSessionUpdateManyWithoutUserNestedInput>;
export const UserSessionUpdateManyWithoutUserNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => UserSessionCreateWithoutUserInputObjectSchema), z.lazy(() => UserSessionCreateWithoutUserInputObjectSchema).array(), z.lazy(() => UserSessionUncheckedCreateWithoutUserInputObjectSchema), z.lazy(() => UserSessionUncheckedCreateWithoutUserInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => UserSessionCreateOrConnectWithoutUserInputObjectSchema),
    z.lazy(() => UserSessionCreateOrConnectWithoutUserInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => UserSessionUpsertWithWhereUniqueWithoutUserInputObjectSchema),
    z.lazy(() => UserSessionUpsertWithWhereUniqueWithoutUserInputObjectSchema).array()]).optional(), createMany: z.lazy(() => UserSessionCreateManyUserInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => UserSessionWhereUniqueInputObjectSchema),
    z.lazy(() => UserSessionWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => UserSessionWhereUniqueInputObjectSchema),
    z.lazy(() => UserSessionWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => UserSessionWhereUniqueInputObjectSchema),
    z.lazy(() => UserSessionWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => UserSessionWhereUniqueInputObjectSchema),
    z.lazy(() => UserSessionWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => UserSessionUpdateWithWhereUniqueWithoutUserInputObjectSchema),
    z.lazy(() => UserSessionUpdateWithWhereUniqueWithoutUserInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => UserSessionUpdateManyWithWhereWithoutUserInputObjectSchema),
    z.lazy(() => UserSessionUpdateManyWithWhereWithoutUserInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => UserSessionScalarWhereInputObjectSchema),
    z.lazy(() => UserSessionScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
