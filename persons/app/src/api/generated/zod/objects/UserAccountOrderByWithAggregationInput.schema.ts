/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { UserAccountCountOrderByAggregateInputObjectSchema } from './UserAccountCountOrderByAggregateInput.schema';
import { UserAccountAvgOrderByAggregateInputObjectSchema } from './UserAccountAvgOrderByAggregateInput.schema';
import { UserAccountMaxOrderByAggregateInputObjectSchema } from './UserAccountMaxOrderByAggregateInput.schema';
import { UserAccountMinOrderByAggregateInputObjectSchema } from './UserAccountMinOrderByAggregateInput.schema';
import { UserAccountSumOrderByAggregateInputObjectSchema } from './UserAccountSumOrderByAggregateInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.UserAccountOrderByWithAggregationInput>;
export const UserAccountOrderByWithAggregationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedAt: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), isDeleted: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), userId: z.lazy(() => SortOrderSchema).optional().optional(), type: z.lazy(() => SortOrderSchema).optional().optional(), provider: z.lazy(() => SortOrderSchema).optional().optional(), providerAccountId: z.lazy(() => SortOrderSchema).optional().optional(), refresh_token: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), access_token: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), expires_at: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), token_type: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), scope: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), id_token: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), session_state: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), _count: z.lazy(() => UserAccountCountOrderByAggregateInputObjectSchema).optional().optional(), _avg: z.lazy(() => UserAccountAvgOrderByAggregateInputObjectSchema).optional().optional(), _max: z.lazy(() => UserAccountMaxOrderByAggregateInputObjectSchema).optional().optional(), _min: z.lazy(() => UserAccountMinOrderByAggregateInputObjectSchema).optional().optional(), _sum: z.lazy(() => UserAccountSumOrderByAggregateInputObjectSchema).optional().optional()
}).strict() as SchemaType;
