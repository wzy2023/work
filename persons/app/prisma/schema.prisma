//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

model CommonGroupLayout {
  id        String    @id() @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  isDeleted Boolean?  @default(false)
  /// ![CommonGroupLayout.Item[]]
  data      Json
}

model HabitGroup {
  id        String      @id() @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt()
  isDeleted Boolean?    @default(false)
  name      String
  sort      Int?        @default(999)
  color     String?
  children  HabitItem[]
}

model HabitItem {
  id        String        @id() @default(cuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt()
  isDeleted Boolean?      @default(false)
  name      String
  sort      Int?          @default(999)
  enabled   Boolean?
  /// ![Habit.Count]
  count     Json?
  /// ![Habit.Frequency]
  frequency Json?
  groupId   String
  group     HabitGroup    @relation(fields: [groupId], references: [id])
  records   HabitRecord[]
}

model HabitRecord {
  id        String    @id() @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  isDeleted Boolean?  @default(false)
  date      DateTime
  reason    String?   @default("")
  /// ![Habit.ExecList]
  execList  Json?     @default("[]")
  habit     HabitItem @relation(fields: [habitId], references: [id])
  habitId   String
}

model TaskNode {
  id        String    @id() @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  isDeleted Boolean?  @default(false)
  type      String
  /// ![TaskNode.Data]
  data      Json
}

model TaskEdge {
  id        String    @id() @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  isDeleted Boolean?  @default(false)
  type      String
  source    String
  target    String
}

model ButtonItem {
  id        String    @id() @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  isDeleted Boolean?  @default(false)
  groupId   String
  sort      Int?      @default(999)
  /// ![Buttons.Type]
  type      String
  title     String?
  content   String
}
