/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { RssItemSelectObjectSchema } from '../objects/RssItemSelect.schema';
import { RssItemIncludeObjectSchema } from '../objects/RssItemInclude.schema';
import { RssItemWhereUniqueInputObjectSchema } from '../objects/RssItemWhereUniqueInput.schema';
import { RssItemWhereInputObjectSchema } from '../objects/RssItemWhereInput.schema';
import { RssItemOrderByWithRelationInputObjectSchema } from '../objects/RssItemOrderByWithRelationInput.schema';
import { RssItemScalarFieldEnumSchema } from '../enums/RssItemScalarFieldEnum.schema';
import { RssItemCreateInputObjectSchema } from '../objects/RssItemCreateInput.schema';
import { RssItemUncheckedCreateInputObjectSchema } from '../objects/RssItemUncheckedCreateInput.schema';
import { RssItemCreateManyInputObjectSchema } from '../objects/RssItemCreateManyInput.schema';
import { RssItemUpdateInputObjectSchema } from '../objects/RssItemUpdateInput.schema';
import { RssItemUncheckedUpdateInputObjectSchema } from '../objects/RssItemUncheckedUpdateInput.schema';
import { RssItemUpdateManyMutationInputObjectSchema } from '../objects/RssItemUpdateManyMutationInput.schema';
import { RssItemUncheckedUpdateManyInputObjectSchema } from '../objects/RssItemUncheckedUpdateManyInput.schema';
import { RssItemCountAggregateInputObjectSchema } from '../objects/RssItemCountAggregateInput.schema';
import { RssItemMinAggregateInputObjectSchema } from '../objects/RssItemMinAggregateInput.schema';
import { RssItemMaxAggregateInputObjectSchema } from '../objects/RssItemMaxAggregateInput.schema';
import { RssItemOrderByWithAggregationInputObjectSchema } from '../objects/RssItemOrderByWithAggregationInput.schema';
import { RssItemScalarWhereWithAggregatesInputObjectSchema } from '../objects/RssItemScalarWhereWithAggregatesInput.schema'

type RssItemInputSchemaType = {
    findUnique: z.ZodType<Prisma.RssItemFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.RssItemFindFirstArgs>,
    findMany: z.ZodType<Prisma.RssItemFindManyArgs>,
    create: z.ZodType<Prisma.RssItemCreateArgs>,
    createMany: z.ZodType<Prisma.RssItemCreateManyArgs>,
    delete: z.ZodType<Prisma.RssItemDeleteArgs>,
    deleteMany: z.ZodType<Prisma.RssItemDeleteManyArgs>,
    update: z.ZodType<Prisma.RssItemUpdateArgs>,
    updateMany: z.ZodType<Prisma.RssItemUpdateManyArgs>,
    upsert: z.ZodType<Prisma.RssItemUpsertArgs>,
    aggregate: z.ZodType<Prisma.RssItemAggregateArgs>,
    groupBy: z.ZodType<Prisma.RssItemGroupByArgs>,
    count: z.ZodType<Prisma.RssItemCountArgs>
}

export const RssItemInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), where: RssItemWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), where: RssItemWhereInputObjectSchema.optional(), orderBy: z.union([RssItemOrderByWithRelationInputObjectSchema, RssItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssItemScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), where: RssItemWhereInputObjectSchema.optional(), orderBy: z.union([RssItemOrderByWithRelationInputObjectSchema, RssItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssItemScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), data: z.union([RssItemCreateInputObjectSchema, RssItemUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([RssItemCreateManyInputObjectSchema, z.array(RssItemCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), where: RssItemWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: RssItemWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), data: z.union([RssItemUpdateInputObjectSchema, RssItemUncheckedUpdateInputObjectSchema]), where: RssItemWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([RssItemUpdateManyMutationInputObjectSchema, RssItemUncheckedUpdateManyInputObjectSchema]), where: RssItemWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => RssItemSelectObjectSchema.optional()), include: z.lazy(() => RssItemIncludeObjectSchema.optional()), where: RssItemWhereUniqueInputObjectSchema, create: z.union([RssItemCreateInputObjectSchema, RssItemUncheckedCreateInputObjectSchema]), update: z.union([RssItemUpdateInputObjectSchema, RssItemUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: RssItemWhereInputObjectSchema.optional(), orderBy: z.union([RssItemOrderByWithRelationInputObjectSchema, RssItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), RssItemCountAggregateInputObjectSchema]).optional(), _min: RssItemMinAggregateInputObjectSchema.optional(), _max: RssItemMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: RssItemWhereInputObjectSchema.optional(), orderBy: z.union([RssItemOrderByWithAggregationInputObjectSchema, RssItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: RssItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(RssItemScalarFieldEnumSchema), _count: z.union([z.literal(true), RssItemCountAggregateInputObjectSchema]).optional(), _min: RssItemMinAggregateInputObjectSchema.optional(), _max: RssItemMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: RssItemWhereInputObjectSchema.optional(), orderBy: z.union([RssItemOrderByWithRelationInputObjectSchema, RssItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssItemScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), RssItemCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as RssItemInputSchemaType;
