/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { RssFeedSelectObjectSchema } from '../objects/RssFeedSelect.schema';
import { RssFeedIncludeObjectSchema } from '../objects/RssFeedInclude.schema';
import { RssFeedWhereUniqueInputObjectSchema } from '../objects/RssFeedWhereUniqueInput.schema';
import { RssFeedWhereInputObjectSchema } from '../objects/RssFeedWhereInput.schema';
import { RssFeedOrderByWithRelationInputObjectSchema } from '../objects/RssFeedOrderByWithRelationInput.schema';
import { RssFeedScalarFieldEnumSchema } from '../enums/RssFeedScalarFieldEnum.schema';
import { RssFeedCreateInputObjectSchema } from '../objects/RssFeedCreateInput.schema';
import { RssFeedUncheckedCreateInputObjectSchema } from '../objects/RssFeedUncheckedCreateInput.schema';
import { RssFeedCreateManyInputObjectSchema } from '../objects/RssFeedCreateManyInput.schema';
import { RssFeedUpdateInputObjectSchema } from '../objects/RssFeedUpdateInput.schema';
import { RssFeedUncheckedUpdateInputObjectSchema } from '../objects/RssFeedUncheckedUpdateInput.schema';
import { RssFeedUpdateManyMutationInputObjectSchema } from '../objects/RssFeedUpdateManyMutationInput.schema';
import { RssFeedUncheckedUpdateManyInputObjectSchema } from '../objects/RssFeedUncheckedUpdateManyInput.schema';
import { RssFeedCountAggregateInputObjectSchema } from '../objects/RssFeedCountAggregateInput.schema';
import { RssFeedMinAggregateInputObjectSchema } from '../objects/RssFeedMinAggregateInput.schema';
import { RssFeedMaxAggregateInputObjectSchema } from '../objects/RssFeedMaxAggregateInput.schema';
import { RssFeedOrderByWithAggregationInputObjectSchema } from '../objects/RssFeedOrderByWithAggregationInput.schema';
import { RssFeedScalarWhereWithAggregatesInputObjectSchema } from '../objects/RssFeedScalarWhereWithAggregatesInput.schema'

type RssFeedInputSchemaType = {
    findUnique: z.ZodType<Prisma.RssFeedFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.RssFeedFindFirstArgs>,
    findMany: z.ZodType<Prisma.RssFeedFindManyArgs>,
    create: z.ZodType<Prisma.RssFeedCreateArgs>,
    createMany: z.ZodType<Prisma.RssFeedCreateManyArgs>,
    delete: z.ZodType<Prisma.RssFeedDeleteArgs>,
    deleteMany: z.ZodType<Prisma.RssFeedDeleteManyArgs>,
    update: z.ZodType<Prisma.RssFeedUpdateArgs>,
    updateMany: z.ZodType<Prisma.RssFeedUpdateManyArgs>,
    upsert: z.ZodType<Prisma.RssFeedUpsertArgs>,
    aggregate: z.ZodType<Prisma.RssFeedAggregateArgs>,
    groupBy: z.ZodType<Prisma.RssFeedGroupByArgs>,
    count: z.ZodType<Prisma.RssFeedCountArgs>
}

export const RssFeedInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), where: RssFeedWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), where: RssFeedWhereInputObjectSchema.optional(), orderBy: z.union([RssFeedOrderByWithRelationInputObjectSchema, RssFeedOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssFeedWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssFeedScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), where: RssFeedWhereInputObjectSchema.optional(), orderBy: z.union([RssFeedOrderByWithRelationInputObjectSchema, RssFeedOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssFeedWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssFeedScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), data: z.union([RssFeedCreateInputObjectSchema, RssFeedUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([RssFeedCreateManyInputObjectSchema, z.array(RssFeedCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), where: RssFeedWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: RssFeedWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), data: z.union([RssFeedUpdateInputObjectSchema, RssFeedUncheckedUpdateInputObjectSchema]), where: RssFeedWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([RssFeedUpdateManyMutationInputObjectSchema, RssFeedUncheckedUpdateManyInputObjectSchema]), where: RssFeedWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => RssFeedSelectObjectSchema.optional()), include: z.lazy(() => RssFeedIncludeObjectSchema.optional()), where: RssFeedWhereUniqueInputObjectSchema, create: z.union([RssFeedCreateInputObjectSchema, RssFeedUncheckedCreateInputObjectSchema]), update: z.union([RssFeedUpdateInputObjectSchema, RssFeedUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: RssFeedWhereInputObjectSchema.optional(), orderBy: z.union([RssFeedOrderByWithRelationInputObjectSchema, RssFeedOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssFeedWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), RssFeedCountAggregateInputObjectSchema]).optional(), _min: RssFeedMinAggregateInputObjectSchema.optional(), _max: RssFeedMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: RssFeedWhereInputObjectSchema.optional(), orderBy: z.union([RssFeedOrderByWithAggregationInputObjectSchema, RssFeedOrderByWithAggregationInputObjectSchema.array()]).optional(), having: RssFeedScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(RssFeedScalarFieldEnumSchema), _count: z.union([z.literal(true), RssFeedCountAggregateInputObjectSchema]).optional(), _min: RssFeedMinAggregateInputObjectSchema.optional(), _max: RssFeedMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: RssFeedWhereInputObjectSchema.optional(), orderBy: z.union([RssFeedOrderByWithRelationInputObjectSchema, RssFeedOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RssFeedWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(RssFeedScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), RssFeedCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as RssFeedInputSchemaType;
