/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { PromptSelectObjectSchema } from '../objects/PromptSelect.schema';
;
import { PromptWhereUniqueInputObjectSchema } from '../objects/PromptWhereUniqueInput.schema';
import { PromptWhereInputObjectSchema } from '../objects/PromptWhereInput.schema';
import { PromptOrderByWithRelationInputObjectSchema } from '../objects/PromptOrderByWithRelationInput.schema';
import { PromptScalarFieldEnumSchema } from '../enums/PromptScalarFieldEnum.schema';
import { PromptCreateInputObjectSchema } from '../objects/PromptCreateInput.schema';
import { PromptUncheckedCreateInputObjectSchema } from '../objects/PromptUncheckedCreateInput.schema';
import { PromptCreateManyInputObjectSchema } from '../objects/PromptCreateManyInput.schema';
import { PromptUpdateInputObjectSchema } from '../objects/PromptUpdateInput.schema';
import { PromptUncheckedUpdateInputObjectSchema } from '../objects/PromptUncheckedUpdateInput.schema';
import { PromptUpdateManyMutationInputObjectSchema } from '../objects/PromptUpdateManyMutationInput.schema';
import { PromptUncheckedUpdateManyInputObjectSchema } from '../objects/PromptUncheckedUpdateManyInput.schema';
import { PromptCountAggregateInputObjectSchema } from '../objects/PromptCountAggregateInput.schema';
import { PromptMinAggregateInputObjectSchema } from '../objects/PromptMinAggregateInput.schema';
import { PromptMaxAggregateInputObjectSchema } from '../objects/PromptMaxAggregateInput.schema';
import { PromptOrderByWithAggregationInputObjectSchema } from '../objects/PromptOrderByWithAggregationInput.schema';
import { PromptScalarWhereWithAggregatesInputObjectSchema } from '../objects/PromptScalarWhereWithAggregatesInput.schema'

type PromptInputSchemaType = {
    findUnique: z.ZodType<Prisma.PromptFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.PromptFindFirstArgs>,
    findMany: z.ZodType<Prisma.PromptFindManyArgs>,
    create: z.ZodType<Prisma.PromptCreateArgs>,
    createMany: z.ZodType<Prisma.PromptCreateManyArgs>,
    delete: z.ZodType<Prisma.PromptDeleteArgs>,
    deleteMany: z.ZodType<Prisma.PromptDeleteManyArgs>,
    update: z.ZodType<Prisma.PromptUpdateArgs>,
    updateMany: z.ZodType<Prisma.PromptUpdateManyArgs>,
    upsert: z.ZodType<Prisma.PromptUpsertArgs>,
    aggregate: z.ZodType<Prisma.PromptAggregateArgs>,
    groupBy: z.ZodType<Prisma.PromptGroupByArgs>,
    count: z.ZodType<Prisma.PromptCountArgs>
}

export const PromptInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), where: PromptWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), where: PromptWhereInputObjectSchema.optional(), orderBy: z.union([PromptOrderByWithRelationInputObjectSchema, PromptOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PromptWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(PromptScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), where: PromptWhereInputObjectSchema.optional(), orderBy: z.union([PromptOrderByWithRelationInputObjectSchema, PromptOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PromptWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(PromptScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), data: z.union([PromptCreateInputObjectSchema, PromptUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([PromptCreateManyInputObjectSchema, z.array(PromptCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), where: PromptWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: PromptWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), data: z.union([PromptUpdateInputObjectSchema, PromptUncheckedUpdateInputObjectSchema]), where: PromptWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([PromptUpdateManyMutationInputObjectSchema, PromptUncheckedUpdateManyInputObjectSchema]), where: PromptWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => PromptSelectObjectSchema.optional()), where: PromptWhereUniqueInputObjectSchema, create: z.union([PromptCreateInputObjectSchema, PromptUncheckedCreateInputObjectSchema]), update: z.union([PromptUpdateInputObjectSchema, PromptUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: PromptWhereInputObjectSchema.optional(), orderBy: z.union([PromptOrderByWithRelationInputObjectSchema, PromptOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PromptWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), PromptCountAggregateInputObjectSchema]).optional(), _min: PromptMinAggregateInputObjectSchema.optional(), _max: PromptMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: PromptWhereInputObjectSchema.optional(), orderBy: z.union([PromptOrderByWithAggregationInputObjectSchema, PromptOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PromptScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(PromptScalarFieldEnumSchema), _count: z.union([z.literal(true), PromptCountAggregateInputObjectSchema]).optional(), _min: PromptMinAggregateInputObjectSchema.optional(), _max: PromptMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: PromptWhereInputObjectSchema.optional(), orderBy: z.union([PromptOrderByWithRelationInputObjectSchema, PromptOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PromptWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(PromptScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), PromptCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as PromptInputSchemaType;
