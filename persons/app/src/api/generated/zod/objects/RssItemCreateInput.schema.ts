/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { RssFeedCreateNestedOneWithoutItemsInputObjectSchema } from './RssFeedCreateNestedOneWithoutItemsInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.RssItemCreateInput>;
export const RssItemCreateInputObjectSchema: SchemaType = z.object({
    id: z.string().optional().optional(), createdAt: z.union([z.date().optional(), z.string().datetime().optional()]).optional(), updatedAt: z.union([z.union([z.date(), z.string().datetime().optional()]),
    z.null()]).optional().nullable(), isDeleted: z.union([z.boolean(),
    z.null()]).optional().nullable(), title: z.string(), description: z.union([z.string(),
    z.null()]).optional().nullable(), content: z.union([z.string(),
    z.null()]).optional().nullable(), link: z.string(), pubDate: z.union([z.date(), z.string().datetime()]), isRead: z.boolean().optional().optional(), isStarred: z.boolean().optional().optional(), isSent: z.boolean().optional().optional(), feed: z.lazy(() => RssFeedCreateNestedOneWithoutItemsInputObjectSchema)
}).strict() as SchemaType;
