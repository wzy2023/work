/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
const baseSchema = z.object({
    id: z.string(),
    createdAt: z.coerce.date().default(() => new Date()),
    updatedAt: z.coerce.date().nullish(),
    isDeleted: z.boolean().default(false).nullish(),
    type: z.string(),
    data: z.any(),
}
).strict();

/**
 * `TaskNode` schema excluding foreign keys and relations.
 */
export const TaskNodeScalarSchema = baseSchema.omit({
    isDeleted: true,
});


/**
 * `TaskNode` schema including all fields (scalar, foreign key, and relations) and validations.
 */
export const TaskNodeSchema = TaskNodeScalarSchema;


/**
 * Schema used for validating Prisma create input. For internal use only.
 * @private
 */
export const TaskNodePrismaCreateSchema = baseSchema.partial().passthrough();


/**
 * Schema used for validating Prisma update input. For internal use only.
 * @private
 */
export const TaskNodePrismaUpdateSchema = z.object({
    id: z.string(),
    createdAt: z.coerce.date().default(() => new Date()),
    updatedAt: z.coerce.date().nullish(),
    isDeleted: z.boolean().default(false).nullish(),
    type: z.string(),
    data: z.any()
}).partial().passthrough();


/**
 * `TaskNode` schema for create operations excluding foreign keys and relations.
 */
export const TaskNodeCreateScalarSchema = baseSchema.partial({
    id: true, createdAt: true, updatedAt: true, isDeleted: true
});


/**
 * `TaskNode` schema for create operations including scalar fields, foreign key fields, and validations.
 */
export const TaskNodeCreateSchema = baseSchema.partial({
    id: true, createdAt: true, updatedAt: true, isDeleted: true
});


/**
 * `TaskNode` schema for update operations excluding foreign keys and relations.
 */
export const TaskNodeUpdateScalarSchema = baseSchema.partial();


/**
 * `TaskNode` schema for update operations including scalar fields, foreign key fields, and validations.
 */
export const TaskNodeUpdateSchema = TaskNodeUpdateScalarSchema;

