/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { RssFeedUpdateWithoutLogsInputObjectSchema } from './RssFeedUpdateWithoutLogsInput.schema';
import { RssFeedUncheckedUpdateWithoutLogsInputObjectSchema } from './RssFeedUncheckedUpdateWithoutLogsInput.schema';
import { RssFeedCreateWithoutLogsInputObjectSchema } from './RssFeedCreateWithoutLogsInput.schema';
import { RssFeedUncheckedCreateWithoutLogsInputObjectSchema } from './RssFeedUncheckedCreateWithoutLogsInput.schema';
import { RssFeedWhereInputObjectSchema } from './RssFeedWhereInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.RssFeedUpsertWithoutLogsInput>;
export const RssFeedUpsertWithoutLogsInputObjectSchema: SchemaType = z.object({
    update: z.union([z.lazy(() => RssFeedUpdateWithoutLogsInputObjectSchema), z.lazy(() => RssFeedUncheckedUpdateWithoutLogsInputObjectSchema)]), create: z.union([z.lazy(() => RssFeedCreateWithoutLogsInputObjectSchema), z.lazy(() => RssFeedUncheckedCreateWithoutLogsInputObjectSchema)]), where: z.lazy(() => RssFeedWhereInputObjectSchema).optional().optional()
}).strict() as SchemaType;
