/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import type { AnyTRPCRouter as AnyRouter } from "@trpc/server";
import type { PrismaClient } from "@prisma/client";
import { createTRPCRouter } from "@/api/trpc/trpc";
import createCommonGroupLayoutRouter from "./CommonGroupLayout.router";
import createHabitGroupRouter from "./HabitGroup.router";
import createHabitItemRouter from "./HabitItem.router";
import createHabitRecordRouter from "./HabitRecord.router";
import createTaskNodeRouter from "./TaskNode.router";
import createTaskEdgeRouter from "./TaskEdge.router";
import createButtonItemRouter from "./ButtonItem.router";
import createCollectingRouter from "./Collecting.router";
import createRssFeedRouter from "./RssFeed.router";
import createRssItemRouter from "./RssItem.router";
import createRssFetchLogRouter from "./RssFetchLog.router";
import createAiRoleRouter from "./AiRole.router";
import createAiInfoRouter from "./AiInfo.router";
import createOrderDemandRouter from "./OrderDemand.router";
import createStudyItemRouter from "./StudyItem.router";
import createStudyOperateRouter from "./StudyOperate.router";
import createUserItemRouter from "./UserItem.router";
import createUserAccountRouter from "./UserAccount.router";
import createUserSessionRouter from "./UserSession.router";

export function db(ctx: any) {
    if (!ctx.prisma) {
        throw new Error('Missing "prisma" field in trpc context');
    }
    return ctx.prisma as PrismaClient;
}

export function createRouter() {
    return createTRPCRouter({
        commonGroupLayout: createCommonGroupLayoutRouter(),
        habitGroup: createHabitGroupRouter(),
        habitItem: createHabitItemRouter(),
        habitRecord: createHabitRecordRouter(),
        taskNode: createTaskNodeRouter(),
        taskEdge: createTaskEdgeRouter(),
        buttonItem: createButtonItemRouter(),
        collecting: createCollectingRouter(),
        rssFeed: createRssFeedRouter(),
        rssItem: createRssItemRouter(),
        rssFetchLog: createRssFetchLogRouter(),
        aiRole: createAiRoleRouter(),
        aiInfo: createAiInfoRouter(),
        orderDemand: createOrderDemandRouter(),
        studyItem: createStudyItemRouter(),
        studyOperate: createStudyOperateRouter(),
        userItem: createUserItemRouter(),
        userAccount: createUserAccountRouter(),
        userSession: createUserSessionRouter(),
    }
    );
}
