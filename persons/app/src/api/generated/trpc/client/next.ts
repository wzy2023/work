/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import type { AnyTRPCRouter as AnyRouter } from '@trpc/server';
import type { NextPageContext } from 'next';
import { type CreateTRPCNext, createTRPCNext as _createTRPCNext } from '@trpc/next';
import type { DeepOverrideAtPath } from './utils';
import { ClientType as CommonGroupLayoutClientType } from "./CommonGroupLayout.next.type";
import { ClientType as HabitGroupClientType } from "./HabitGroup.next.type";
import { ClientType as HabitItemClientType } from "./HabitItem.next.type";
import { ClientType as HabitRecordClientType } from "./HabitRecord.next.type";
import { ClientType as TaskNodeClientType } from "./TaskNode.next.type";
import { ClientType as TaskEdgeClientType } from "./TaskEdge.next.type";
import { ClientType as ButtonItemClientType } from "./ButtonItem.next.type";
import { ClientType as CollectingClientType } from "./Collecting.next.type";
import { ClientType as RssFeedClientType } from "./RssFeed.next.type";
import { ClientType as RssItemClientType } from "./RssItem.next.type";
import { ClientType as RssFetchLogClientType } from "./RssFetchLog.next.type";
import { ClientType as AiRoleClientType } from "./AiRole.next.type";
import { ClientType as AiInfoClientType } from "./AiInfo.next.type";
import { ClientType as OrderDemandClientType } from "./OrderDemand.next.type";

export function createTRPCNext<
    TRouter extends AnyRouter,
    TPath extends string | undefined = undefined,
    TSSRContext extends NextPageContext = NextPageContext
>(opts: Parameters<typeof _createTRPCNext>[0]) {
    const r: CreateTRPCNext<TRouter, TSSRContext> = _createTRPCNext<TRouter, TSSRContext>(opts);
    return r as DeepOverrideAtPath<CreateTRPCNext<TRouter, TSSRContext>, ClientType<TRouter>, TPath>;
}

export interface ClientType<AppRouter extends AnyRouter> {
    commonGroupLayout: CommonGroupLayoutClientType<AppRouter>;
    habitGroup: HabitGroupClientType<AppRouter>;
    habitItem: HabitItemClientType<AppRouter>;
    habitRecord: HabitRecordClientType<AppRouter>;
    taskNode: TaskNodeClientType<AppRouter>;
    taskEdge: TaskEdgeClientType<AppRouter>;
    buttonItem: ButtonItemClientType<AppRouter>;
    collecting: CollectingClientType<AppRouter>;
    rssFeed: RssFeedClientType<AppRouter>;
    rssItem: RssItemClientType<AppRouter>;
    rssFetchLog: RssFetchLogClientType<AppRouter>;
    aiRole: AiRoleClientType<AppRouter>;
    aiInfo: AiInfoClientType<AppRouter>;
    orderDemand: OrderDemandClientType<AppRouter>;
}
