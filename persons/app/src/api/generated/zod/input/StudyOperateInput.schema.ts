/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { StudyOperateSelectObjectSchema } from '../objects/StudyOperateSelect.schema';
;
import { StudyOperateWhereUniqueInputObjectSchema } from '../objects/StudyOperateWhereUniqueInput.schema';
import { StudyOperateWhereInputObjectSchema } from '../objects/StudyOperateWhereInput.schema';
import { StudyOperateOrderByWithRelationInputObjectSchema } from '../objects/StudyOperateOrderByWithRelationInput.schema';
import { StudyOperateScalarFieldEnumSchema } from '../enums/StudyOperateScalarFieldEnum.schema';
import { StudyOperateCreateInputObjectSchema } from '../objects/StudyOperateCreateInput.schema';
import { StudyOperateUncheckedCreateInputObjectSchema } from '../objects/StudyOperateUncheckedCreateInput.schema';
import { StudyOperateCreateManyInputObjectSchema } from '../objects/StudyOperateCreateManyInput.schema';
import { StudyOperateUpdateInputObjectSchema } from '../objects/StudyOperateUpdateInput.schema';
import { StudyOperateUncheckedUpdateInputObjectSchema } from '../objects/StudyOperateUncheckedUpdateInput.schema';
import { StudyOperateUpdateManyMutationInputObjectSchema } from '../objects/StudyOperateUpdateManyMutationInput.schema';
import { StudyOperateUncheckedUpdateManyInputObjectSchema } from '../objects/StudyOperateUncheckedUpdateManyInput.schema';
import { StudyOperateCountAggregateInputObjectSchema } from '../objects/StudyOperateCountAggregateInput.schema';
import { StudyOperateMinAggregateInputObjectSchema } from '../objects/StudyOperateMinAggregateInput.schema';
import { StudyOperateMaxAggregateInputObjectSchema } from '../objects/StudyOperateMaxAggregateInput.schema';
import { StudyOperateOrderByWithAggregationInputObjectSchema } from '../objects/StudyOperateOrderByWithAggregationInput.schema';
import { StudyOperateScalarWhereWithAggregatesInputObjectSchema } from '../objects/StudyOperateScalarWhereWithAggregatesInput.schema'

type StudyOperateInputSchemaType = {
    findUnique: z.ZodType<Prisma.StudyOperateFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.StudyOperateFindFirstArgs>,
    findMany: z.ZodType<Prisma.StudyOperateFindManyArgs>,
    create: z.ZodType<Prisma.StudyOperateCreateArgs>,
    createMany: z.ZodType<Prisma.StudyOperateCreateManyArgs>,
    delete: z.ZodType<Prisma.StudyOperateDeleteArgs>,
    deleteMany: z.ZodType<Prisma.StudyOperateDeleteManyArgs>,
    update: z.ZodType<Prisma.StudyOperateUpdateArgs>,
    updateMany: z.ZodType<Prisma.StudyOperateUpdateManyArgs>,
    upsert: z.ZodType<Prisma.StudyOperateUpsertArgs>,
    aggregate: z.ZodType<Prisma.StudyOperateAggregateArgs>,
    groupBy: z.ZodType<Prisma.StudyOperateGroupByArgs>,
    count: z.ZodType<Prisma.StudyOperateCountArgs>
}

export const StudyOperateInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), where: StudyOperateWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), where: StudyOperateWhereInputObjectSchema.optional(), orderBy: z.union([StudyOperateOrderByWithRelationInputObjectSchema, StudyOperateOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: StudyOperateWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(StudyOperateScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), where: StudyOperateWhereInputObjectSchema.optional(), orderBy: z.union([StudyOperateOrderByWithRelationInputObjectSchema, StudyOperateOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: StudyOperateWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(StudyOperateScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), data: z.union([StudyOperateCreateInputObjectSchema, StudyOperateUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([StudyOperateCreateManyInputObjectSchema, z.array(StudyOperateCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), where: StudyOperateWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: StudyOperateWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), data: z.union([StudyOperateUpdateInputObjectSchema, StudyOperateUncheckedUpdateInputObjectSchema]), where: StudyOperateWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([StudyOperateUpdateManyMutationInputObjectSchema, StudyOperateUncheckedUpdateManyInputObjectSchema]), where: StudyOperateWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => StudyOperateSelectObjectSchema.optional()), where: StudyOperateWhereUniqueInputObjectSchema, create: z.union([StudyOperateCreateInputObjectSchema, StudyOperateUncheckedCreateInputObjectSchema]), update: z.union([StudyOperateUpdateInputObjectSchema, StudyOperateUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: StudyOperateWhereInputObjectSchema.optional(), orderBy: z.union([StudyOperateOrderByWithRelationInputObjectSchema, StudyOperateOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: StudyOperateWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), StudyOperateCountAggregateInputObjectSchema]).optional(), _min: StudyOperateMinAggregateInputObjectSchema.optional(), _max: StudyOperateMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: StudyOperateWhereInputObjectSchema.optional(), orderBy: z.union([StudyOperateOrderByWithAggregationInputObjectSchema, StudyOperateOrderByWithAggregationInputObjectSchema.array()]).optional(), having: StudyOperateScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(StudyOperateScalarFieldEnumSchema), _count: z.union([z.literal(true), StudyOperateCountAggregateInputObjectSchema]).optional(), _min: StudyOperateMinAggregateInputObjectSchema.optional(), _max: StudyOperateMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: StudyOperateWhereInputObjectSchema.optional(), orderBy: z.union([StudyOperateOrderByWithRelationInputObjectSchema, StudyOperateOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: StudyOperateWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(StudyOperateScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), StudyOperateCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as StudyOperateInputSchemaType;
