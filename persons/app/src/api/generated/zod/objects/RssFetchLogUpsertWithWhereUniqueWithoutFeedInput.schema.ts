/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { RssFetchLogWhereUniqueInputObjectSchema } from './RssFetchLogWhereUniqueInput.schema';
import { RssFetchLogUpdateWithoutFeedInputObjectSchema } from './RssFetchLogUpdateWithoutFeedInput.schema';
import { RssFetchLogUncheckedUpdateWithoutFeedInputObjectSchema } from './RssFetchLogUncheckedUpdateWithoutFeedInput.schema';
import { RssFetchLogCreateWithoutFeedInputObjectSchema } from './RssFetchLogCreateWithoutFeedInput.schema';
import { RssFetchLogUncheckedCreateWithoutFeedInputObjectSchema } from './RssFetchLogUncheckedCreateWithoutFeedInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.RssFetchLogUpsertWithWhereUniqueWithoutFeedInput>;
export const RssFetchLogUpsertWithWhereUniqueWithoutFeedInputObjectSchema: SchemaType = z.object({
    where: z.lazy(() => RssFetchLogWhereUniqueInputObjectSchema), update: z.union([z.lazy(() => RssFetchLogUpdateWithoutFeedInputObjectSchema), z.lazy(() => RssFetchLogUncheckedUpdateWithoutFeedInputObjectSchema)]), create: z.union([z.lazy(() => RssFetchLogCreateWithoutFeedInputObjectSchema), z.lazy(() => RssFetchLogUncheckedCreateWithoutFeedInputObjectSchema)])
}).strict() as SchemaType;
