/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { InfoItemSelectObjectSchema } from '../objects/InfoItemSelect.schema';
;
import { InfoItemWhereUniqueInputObjectSchema } from '../objects/InfoItemWhereUniqueInput.schema';
import { InfoItemWhereInputObjectSchema } from '../objects/InfoItemWhereInput.schema';
import { InfoItemOrderByWithRelationInputObjectSchema } from '../objects/InfoItemOrderByWithRelationInput.schema';
import { InfoItemScalarFieldEnumSchema } from '../enums/InfoItemScalarFieldEnum.schema';
import { InfoItemCreateInputObjectSchema } from '../objects/InfoItemCreateInput.schema';
import { InfoItemUncheckedCreateInputObjectSchema } from '../objects/InfoItemUncheckedCreateInput.schema';
import { InfoItemCreateManyInputObjectSchema } from '../objects/InfoItemCreateManyInput.schema';
import { InfoItemUpdateInputObjectSchema } from '../objects/InfoItemUpdateInput.schema';
import { InfoItemUncheckedUpdateInputObjectSchema } from '../objects/InfoItemUncheckedUpdateInput.schema';
import { InfoItemUpdateManyMutationInputObjectSchema } from '../objects/InfoItemUpdateManyMutationInput.schema';
import { InfoItemUncheckedUpdateManyInputObjectSchema } from '../objects/InfoItemUncheckedUpdateManyInput.schema';
import { InfoItemCountAggregateInputObjectSchema } from '../objects/InfoItemCountAggregateInput.schema';
import { InfoItemMinAggregateInputObjectSchema } from '../objects/InfoItemMinAggregateInput.schema';
import { InfoItemMaxAggregateInputObjectSchema } from '../objects/InfoItemMaxAggregateInput.schema';
import { InfoItemOrderByWithAggregationInputObjectSchema } from '../objects/InfoItemOrderByWithAggregationInput.schema';
import { InfoItemScalarWhereWithAggregatesInputObjectSchema } from '../objects/InfoItemScalarWhereWithAggregatesInput.schema'

type InfoItemInputSchemaType = {
    findUnique: z.ZodType<Prisma.InfoItemFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.InfoItemFindFirstArgs>,
    findMany: z.ZodType<Prisma.InfoItemFindManyArgs>,
    create: z.ZodType<Prisma.InfoItemCreateArgs>,
    createMany: z.ZodType<Prisma.InfoItemCreateManyArgs>,
    delete: z.ZodType<Prisma.InfoItemDeleteArgs>,
    deleteMany: z.ZodType<Prisma.InfoItemDeleteManyArgs>,
    update: z.ZodType<Prisma.InfoItemUpdateArgs>,
    updateMany: z.ZodType<Prisma.InfoItemUpdateManyArgs>,
    upsert: z.ZodType<Prisma.InfoItemUpsertArgs>,
    aggregate: z.ZodType<Prisma.InfoItemAggregateArgs>,
    groupBy: z.ZodType<Prisma.InfoItemGroupByArgs>,
    count: z.ZodType<Prisma.InfoItemCountArgs>
}

export const InfoItemInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), where: InfoItemWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), where: InfoItemWhereInputObjectSchema.optional(), orderBy: z.union([InfoItemOrderByWithRelationInputObjectSchema, InfoItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InfoItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InfoItemScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), where: InfoItemWhereInputObjectSchema.optional(), orderBy: z.union([InfoItemOrderByWithRelationInputObjectSchema, InfoItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InfoItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InfoItemScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), data: z.union([InfoItemCreateInputObjectSchema, InfoItemUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([InfoItemCreateManyInputObjectSchema, z.array(InfoItemCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), where: InfoItemWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: InfoItemWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), data: z.union([InfoItemUpdateInputObjectSchema, InfoItemUncheckedUpdateInputObjectSchema]), where: InfoItemWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([InfoItemUpdateManyMutationInputObjectSchema, InfoItemUncheckedUpdateManyInputObjectSchema]), where: InfoItemWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => InfoItemSelectObjectSchema.optional()), where: InfoItemWhereUniqueInputObjectSchema, create: z.union([InfoItemCreateInputObjectSchema, InfoItemUncheckedCreateInputObjectSchema]), update: z.union([InfoItemUpdateInputObjectSchema, InfoItemUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: InfoItemWhereInputObjectSchema.optional(), orderBy: z.union([InfoItemOrderByWithRelationInputObjectSchema, InfoItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InfoItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), InfoItemCountAggregateInputObjectSchema]).optional(), _min: InfoItemMinAggregateInputObjectSchema.optional(), _max: InfoItemMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: InfoItemWhereInputObjectSchema.optional(), orderBy: z.union([InfoItemOrderByWithAggregationInputObjectSchema, InfoItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: InfoItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(InfoItemScalarFieldEnumSchema), _count: z.union([z.literal(true), InfoItemCountAggregateInputObjectSchema]).optional(), _min: InfoItemMinAggregateInputObjectSchema.optional(), _max: InfoItemMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: InfoItemWhereInputObjectSchema.optional(), orderBy: z.union([InfoItemOrderByWithRelationInputObjectSchema, InfoItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: InfoItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(InfoItemScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), InfoItemCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as InfoItemInputSchemaType;
