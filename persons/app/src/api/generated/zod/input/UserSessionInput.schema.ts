/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { UserSessionSelectObjectSchema } from '../objects/UserSessionSelect.schema';
import { UserSessionIncludeObjectSchema } from '../objects/UserSessionInclude.schema';
import { UserSessionWhereUniqueInputObjectSchema } from '../objects/UserSessionWhereUniqueInput.schema';
import { UserSessionWhereInputObjectSchema } from '../objects/UserSessionWhereInput.schema';
import { UserSessionOrderByWithRelationInputObjectSchema } from '../objects/UserSessionOrderByWithRelationInput.schema';
import { UserSessionScalarFieldEnumSchema } from '../enums/UserSessionScalarFieldEnum.schema';
import { UserSessionCreateInputObjectSchema } from '../objects/UserSessionCreateInput.schema';
import { UserSessionUncheckedCreateInputObjectSchema } from '../objects/UserSessionUncheckedCreateInput.schema';
import { UserSessionCreateManyInputObjectSchema } from '../objects/UserSessionCreateManyInput.schema';
import { UserSessionUpdateInputObjectSchema } from '../objects/UserSessionUpdateInput.schema';
import { UserSessionUncheckedUpdateInputObjectSchema } from '../objects/UserSessionUncheckedUpdateInput.schema';
import { UserSessionUpdateManyMutationInputObjectSchema } from '../objects/UserSessionUpdateManyMutationInput.schema';
import { UserSessionUncheckedUpdateManyInputObjectSchema } from '../objects/UserSessionUncheckedUpdateManyInput.schema';
import { UserSessionCountAggregateInputObjectSchema } from '../objects/UserSessionCountAggregateInput.schema';
import { UserSessionMinAggregateInputObjectSchema } from '../objects/UserSessionMinAggregateInput.schema';
import { UserSessionMaxAggregateInputObjectSchema } from '../objects/UserSessionMaxAggregateInput.schema';
import { UserSessionOrderByWithAggregationInputObjectSchema } from '../objects/UserSessionOrderByWithAggregationInput.schema';
import { UserSessionScalarWhereWithAggregatesInputObjectSchema } from '../objects/UserSessionScalarWhereWithAggregatesInput.schema'

type UserSessionInputSchemaType = {
    findUnique: z.ZodType<Prisma.UserSessionFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.UserSessionFindFirstArgs>,
    findMany: z.ZodType<Prisma.UserSessionFindManyArgs>,
    create: z.ZodType<Prisma.UserSessionCreateArgs>,
    createMany: z.ZodType<Prisma.UserSessionCreateManyArgs>,
    delete: z.ZodType<Prisma.UserSessionDeleteArgs>,
    deleteMany: z.ZodType<Prisma.UserSessionDeleteManyArgs>,
    update: z.ZodType<Prisma.UserSessionUpdateArgs>,
    updateMany: z.ZodType<Prisma.UserSessionUpdateManyArgs>,
    upsert: z.ZodType<Prisma.UserSessionUpsertArgs>,
    aggregate: z.ZodType<Prisma.UserSessionAggregateArgs>,
    groupBy: z.ZodType<Prisma.UserSessionGroupByArgs>,
    count: z.ZodType<Prisma.UserSessionCountArgs>
}

export const UserSessionInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), where: UserSessionWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), where: UserSessionWhereInputObjectSchema.optional(), orderBy: z.union([UserSessionOrderByWithRelationInputObjectSchema, UserSessionOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserSessionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserSessionScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), where: UserSessionWhereInputObjectSchema.optional(), orderBy: z.union([UserSessionOrderByWithRelationInputObjectSchema, UserSessionOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserSessionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserSessionScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), data: z.union([UserSessionCreateInputObjectSchema, UserSessionUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([UserSessionCreateManyInputObjectSchema, z.array(UserSessionCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), where: UserSessionWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: UserSessionWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), data: z.union([UserSessionUpdateInputObjectSchema, UserSessionUncheckedUpdateInputObjectSchema]), where: UserSessionWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([UserSessionUpdateManyMutationInputObjectSchema, UserSessionUncheckedUpdateManyInputObjectSchema]), where: UserSessionWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => UserSessionSelectObjectSchema.optional()), include: z.lazy(() => UserSessionIncludeObjectSchema.optional()), where: UserSessionWhereUniqueInputObjectSchema, create: z.union([UserSessionCreateInputObjectSchema, UserSessionUncheckedCreateInputObjectSchema]), update: z.union([UserSessionUpdateInputObjectSchema, UserSessionUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: UserSessionWhereInputObjectSchema.optional(), orderBy: z.union([UserSessionOrderByWithRelationInputObjectSchema, UserSessionOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserSessionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), UserSessionCountAggregateInputObjectSchema]).optional(), _min: UserSessionMinAggregateInputObjectSchema.optional(), _max: UserSessionMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: UserSessionWhereInputObjectSchema.optional(), orderBy: z.union([UserSessionOrderByWithAggregationInputObjectSchema, UserSessionOrderByWithAggregationInputObjectSchema.array()]).optional(), having: UserSessionScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(UserSessionScalarFieldEnumSchema), _count: z.union([z.literal(true), UserSessionCountAggregateInputObjectSchema]).optional(), _min: UserSessionMinAggregateInputObjectSchema.optional(), _max: UserSessionMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: UserSessionWhereInputObjectSchema.optional(), orderBy: z.union([UserSessionOrderByWithRelationInputObjectSchema, UserSessionOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserSessionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserSessionScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), UserSessionCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as UserSessionInputSchemaType;
