/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { SortOrderSchema } from '../enums/SortOrder.schema';
import { SortOrderInputObjectSchema } from './SortOrderInput.schema';
import { RssFetchLogCountOrderByAggregateInputObjectSchema } from './RssFetchLogCountOrderByAggregateInput.schema';
import { RssFetchLogAvgOrderByAggregateInputObjectSchema } from './RssFetchLogAvgOrderByAggregateInput.schema';
import { RssFetchLogMaxOrderByAggregateInputObjectSchema } from './RssFetchLogMaxOrderByAggregateInput.schema';
import { RssFetchLogMinOrderByAggregateInputObjectSchema } from './RssFetchLogMinOrderByAggregateInput.schema';
import { RssFetchLogSumOrderByAggregateInputObjectSchema } from './RssFetchLogSumOrderByAggregateInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.RssFetchLogOrderByWithAggregationInput>;
export const RssFetchLogOrderByWithAggregationInputObjectSchema: SchemaType = z.object({
    id: z.lazy(() => SortOrderSchema).optional().optional(), createdAt: z.lazy(() => SortOrderSchema).optional().optional(), updatedAt: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), isDeleted: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), executedAt: z.lazy(() => SortOrderSchema).optional().optional(), status: z.lazy(() => SortOrderSchema).optional().optional(), errorMessage: z.union([z.lazy(() => SortOrderSchema),
    z.lazy(() => SortOrderInputObjectSchema)]).optional(), itemCount: z.lazy(() => SortOrderSchema).optional().optional(), triggerType: z.lazy(() => SortOrderSchema).optional().optional(), feedId: z.lazy(() => SortOrderSchema).optional().optional(), _count: z.lazy(() => RssFetchLogCountOrderByAggregateInputObjectSchema).optional().optional(), _avg: z.lazy(() => RssFetchLogAvgOrderByAggregateInputObjectSchema).optional().optional(), _max: z.lazy(() => RssFetchLogMaxOrderByAggregateInputObjectSchema).optional().optional(), _min: z.lazy(() => RssFetchLogMinOrderByAggregateInputObjectSchema).optional().optional(), _sum: z.lazy(() => RssFetchLogSumOrderByAggregateInputObjectSchema).optional().optional()
}).strict() as SchemaType;
