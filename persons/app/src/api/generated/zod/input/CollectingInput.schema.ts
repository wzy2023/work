/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { CollectingSelectObjectSchema } from '../objects/CollectingSelect.schema';
;
import { CollectingWhereUniqueInputObjectSchema } from '../objects/CollectingWhereUniqueInput.schema';
import { CollectingWhereInputObjectSchema } from '../objects/CollectingWhereInput.schema';
import { CollectingOrderByWithRelationInputObjectSchema } from '../objects/CollectingOrderByWithRelationInput.schema';
import { CollectingScalarFieldEnumSchema } from '../enums/CollectingScalarFieldEnum.schema';
import { CollectingCreateInputObjectSchema } from '../objects/CollectingCreateInput.schema';
import { CollectingUncheckedCreateInputObjectSchema } from '../objects/CollectingUncheckedCreateInput.schema';
import { CollectingCreateManyInputObjectSchema } from '../objects/CollectingCreateManyInput.schema';
import { CollectingUpdateInputObjectSchema } from '../objects/CollectingUpdateInput.schema';
import { CollectingUncheckedUpdateInputObjectSchema } from '../objects/CollectingUncheckedUpdateInput.schema';
import { CollectingUpdateManyMutationInputObjectSchema } from '../objects/CollectingUpdateManyMutationInput.schema';
import { CollectingUncheckedUpdateManyInputObjectSchema } from '../objects/CollectingUncheckedUpdateManyInput.schema';
import { CollectingCountAggregateInputObjectSchema } from '../objects/CollectingCountAggregateInput.schema';
import { CollectingMinAggregateInputObjectSchema } from '../objects/CollectingMinAggregateInput.schema';
import { CollectingMaxAggregateInputObjectSchema } from '../objects/CollectingMaxAggregateInput.schema';
import { CollectingOrderByWithAggregationInputObjectSchema } from '../objects/CollectingOrderByWithAggregationInput.schema';
import { CollectingScalarWhereWithAggregatesInputObjectSchema } from '../objects/CollectingScalarWhereWithAggregatesInput.schema'

type CollectingInputSchemaType = {
    findUnique: z.ZodType<Prisma.CollectingFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.CollectingFindFirstArgs>,
    findMany: z.ZodType<Prisma.CollectingFindManyArgs>,
    create: z.ZodType<Prisma.CollectingCreateArgs>,
    createMany: z.ZodType<Prisma.CollectingCreateManyArgs>,
    delete: z.ZodType<Prisma.CollectingDeleteArgs>,
    deleteMany: z.ZodType<Prisma.CollectingDeleteManyArgs>,
    update: z.ZodType<Prisma.CollectingUpdateArgs>,
    updateMany: z.ZodType<Prisma.CollectingUpdateManyArgs>,
    upsert: z.ZodType<Prisma.CollectingUpsertArgs>,
    aggregate: z.ZodType<Prisma.CollectingAggregateArgs>,
    groupBy: z.ZodType<Prisma.CollectingGroupByArgs>,
    count: z.ZodType<Prisma.CollectingCountArgs>
}

export const CollectingInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), where: CollectingWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), where: CollectingWhereInputObjectSchema.optional(), orderBy: z.union([CollectingOrderByWithRelationInputObjectSchema, CollectingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CollectingWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(CollectingScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), where: CollectingWhereInputObjectSchema.optional(), orderBy: z.union([CollectingOrderByWithRelationInputObjectSchema, CollectingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CollectingWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(CollectingScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), data: z.union([CollectingCreateInputObjectSchema, CollectingUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([CollectingCreateManyInputObjectSchema, z.array(CollectingCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), where: CollectingWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: CollectingWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), data: z.union([CollectingUpdateInputObjectSchema, CollectingUncheckedUpdateInputObjectSchema]), where: CollectingWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([CollectingUpdateManyMutationInputObjectSchema, CollectingUncheckedUpdateManyInputObjectSchema]), where: CollectingWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => CollectingSelectObjectSchema.optional()), where: CollectingWhereUniqueInputObjectSchema, create: z.union([CollectingCreateInputObjectSchema, CollectingUncheckedCreateInputObjectSchema]), update: z.union([CollectingUpdateInputObjectSchema, CollectingUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: CollectingWhereInputObjectSchema.optional(), orderBy: z.union([CollectingOrderByWithRelationInputObjectSchema, CollectingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CollectingWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), CollectingCountAggregateInputObjectSchema]).optional(), _min: CollectingMinAggregateInputObjectSchema.optional(), _max: CollectingMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: CollectingWhereInputObjectSchema.optional(), orderBy: z.union([CollectingOrderByWithAggregationInputObjectSchema, CollectingOrderByWithAggregationInputObjectSchema.array()]).optional(), having: CollectingScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(CollectingScalarFieldEnumSchema), _count: z.union([z.literal(true), CollectingCountAggregateInputObjectSchema]).optional(), _min: CollectingMinAggregateInputObjectSchema.optional(), _max: CollectingMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: CollectingWhereInputObjectSchema.optional(), orderBy: z.union([CollectingOrderByWithRelationInputObjectSchema, CollectingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CollectingWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(CollectingScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), CollectingCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as CollectingInputSchemaType;
