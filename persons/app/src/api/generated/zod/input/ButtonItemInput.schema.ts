/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { ButtonItemSelectObjectSchema } from '../objects/ButtonItemSelect.schema';
;
import { ButtonItemWhereUniqueInputObjectSchema } from '../objects/ButtonItemWhereUniqueInput.schema';
import { ButtonItemWhereInputObjectSchema } from '../objects/ButtonItemWhereInput.schema';
import { ButtonItemOrderByWithRelationInputObjectSchema } from '../objects/ButtonItemOrderByWithRelationInput.schema';
import { ButtonItemScalarFieldEnumSchema } from '../enums/ButtonItemScalarFieldEnum.schema';
import { ButtonItemCreateInputObjectSchema } from '../objects/ButtonItemCreateInput.schema';
import { ButtonItemUncheckedCreateInputObjectSchema } from '../objects/ButtonItemUncheckedCreateInput.schema';
import { ButtonItemCreateManyInputObjectSchema } from '../objects/ButtonItemCreateManyInput.schema';
import { ButtonItemUpdateInputObjectSchema } from '../objects/ButtonItemUpdateInput.schema';
import { ButtonItemUncheckedUpdateInputObjectSchema } from '../objects/ButtonItemUncheckedUpdateInput.schema';
import { ButtonItemUpdateManyMutationInputObjectSchema } from '../objects/ButtonItemUpdateManyMutationInput.schema';
import { ButtonItemUncheckedUpdateManyInputObjectSchema } from '../objects/ButtonItemUncheckedUpdateManyInput.schema';
import { ButtonItemCountAggregateInputObjectSchema } from '../objects/ButtonItemCountAggregateInput.schema';
import { ButtonItemMinAggregateInputObjectSchema } from '../objects/ButtonItemMinAggregateInput.schema';
import { ButtonItemMaxAggregateInputObjectSchema } from '../objects/ButtonItemMaxAggregateInput.schema';
import { ButtonItemAvgAggregateInputObjectSchema } from '../objects/ButtonItemAvgAggregateInput.schema';
import { ButtonItemSumAggregateInputObjectSchema } from '../objects/ButtonItemSumAggregateInput.schema';
import { ButtonItemOrderByWithAggregationInputObjectSchema } from '../objects/ButtonItemOrderByWithAggregationInput.schema';
import { ButtonItemScalarWhereWithAggregatesInputObjectSchema } from '../objects/ButtonItemScalarWhereWithAggregatesInput.schema'

type ButtonItemInputSchemaType = {
    findUnique: z.ZodType<Prisma.ButtonItemFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.ButtonItemFindFirstArgs>,
    findMany: z.ZodType<Prisma.ButtonItemFindManyArgs>,
    create: z.ZodType<Prisma.ButtonItemCreateArgs>,
    createMany: z.ZodType<Prisma.ButtonItemCreateManyArgs>,
    delete: z.ZodType<Prisma.ButtonItemDeleteArgs>,
    deleteMany: z.ZodType<Prisma.ButtonItemDeleteManyArgs>,
    update: z.ZodType<Prisma.ButtonItemUpdateArgs>,
    updateMany: z.ZodType<Prisma.ButtonItemUpdateManyArgs>,
    upsert: z.ZodType<Prisma.ButtonItemUpsertArgs>,
    aggregate: z.ZodType<Prisma.ButtonItemAggregateArgs>,
    groupBy: z.ZodType<Prisma.ButtonItemGroupByArgs>,
    count: z.ZodType<Prisma.ButtonItemCountArgs>
}

export const ButtonItemInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), where: ButtonItemWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), where: ButtonItemWhereInputObjectSchema.optional(), orderBy: z.union([ButtonItemOrderByWithRelationInputObjectSchema, ButtonItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ButtonItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(ButtonItemScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), where: ButtonItemWhereInputObjectSchema.optional(), orderBy: z.union([ButtonItemOrderByWithRelationInputObjectSchema, ButtonItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ButtonItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(ButtonItemScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), data: z.union([ButtonItemCreateInputObjectSchema, ButtonItemUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([ButtonItemCreateManyInputObjectSchema, z.array(ButtonItemCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), where: ButtonItemWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: ButtonItemWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), data: z.union([ButtonItemUpdateInputObjectSchema, ButtonItemUncheckedUpdateInputObjectSchema]), where: ButtonItemWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([ButtonItemUpdateManyMutationInputObjectSchema, ButtonItemUncheckedUpdateManyInputObjectSchema]), where: ButtonItemWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => ButtonItemSelectObjectSchema.optional()), where: ButtonItemWhereUniqueInputObjectSchema, create: z.union([ButtonItemCreateInputObjectSchema, ButtonItemUncheckedCreateInputObjectSchema]), update: z.union([ButtonItemUpdateInputObjectSchema, ButtonItemUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: ButtonItemWhereInputObjectSchema.optional(), orderBy: z.union([ButtonItemOrderByWithRelationInputObjectSchema, ButtonItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ButtonItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), ButtonItemCountAggregateInputObjectSchema]).optional(), _min: ButtonItemMinAggregateInputObjectSchema.optional(), _max: ButtonItemMaxAggregateInputObjectSchema.optional(), _avg: ButtonItemAvgAggregateInputObjectSchema.optional(), _sum: ButtonItemSumAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: ButtonItemWhereInputObjectSchema.optional(), orderBy: z.union([ButtonItemOrderByWithAggregationInputObjectSchema, ButtonItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ButtonItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ButtonItemScalarFieldEnumSchema), _count: z.union([z.literal(true), ButtonItemCountAggregateInputObjectSchema]).optional(), _min: ButtonItemMinAggregateInputObjectSchema.optional(), _max: ButtonItemMaxAggregateInputObjectSchema.optional(), _avg: ButtonItemAvgAggregateInputObjectSchema.optional(), _sum: ButtonItemSumAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: ButtonItemWhereInputObjectSchema.optional(), orderBy: z.union([ButtonItemOrderByWithRelationInputObjectSchema, ButtonItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ButtonItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(ButtonItemScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), ButtonItemCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as ButtonItemInputSchemaType;
