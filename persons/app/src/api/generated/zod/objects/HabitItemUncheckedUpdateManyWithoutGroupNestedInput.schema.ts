/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
import { HabitItemCreateWithoutGroupInputObjectSchema } from './HabitItemCreateWithoutGroupInput.schema';
import { HabitItemUncheckedCreateWithoutGroupInputObjectSchema } from './HabitItemUncheckedCreateWithoutGroupInput.schema';
import { HabitItemCreateOrConnectWithoutGroupInputObjectSchema } from './HabitItemCreateOrConnectWithoutGroupInput.schema';
import { HabitItemUpsertWithWhereUniqueWithoutGroupInputObjectSchema } from './HabitItemUpsertWithWhereUniqueWithoutGroupInput.schema';
import { HabitItemCreateManyGroupInputEnvelopeObjectSchema } from './HabitItemCreateManyGroupInputEnvelope.schema';
import { HabitItemWhereUniqueInputObjectSchema } from './HabitItemWhereUniqueInput.schema';
import { HabitItemUpdateWithWhereUniqueWithoutGroupInputObjectSchema } from './HabitItemUpdateWithWhereUniqueWithoutGroupInput.schema';
import { HabitItemUpdateManyWithWhereWithoutGroupInputObjectSchema } from './HabitItemUpdateManyWithWhereWithoutGroupInput.schema';
import { HabitItemScalarWhereInputObjectSchema } from './HabitItemScalarWhereInput.schema';

import type { Prisma } from '@prisma/client';

type SchemaType = z.ZodType<Prisma.HabitItemUncheckedUpdateManyWithoutGroupNestedInput>;
export const HabitItemUncheckedUpdateManyWithoutGroupNestedInputObjectSchema: SchemaType = z.object({
    create: z.union([z.lazy(() => HabitItemCreateWithoutGroupInputObjectSchema), z.lazy(() => HabitItemCreateWithoutGroupInputObjectSchema).array(), z.lazy(() => HabitItemUncheckedCreateWithoutGroupInputObjectSchema), z.lazy(() => HabitItemUncheckedCreateWithoutGroupInputObjectSchema).array()]).optional(), connectOrCreate: z.union([z.lazy(() => HabitItemCreateOrConnectWithoutGroupInputObjectSchema),
    z.lazy(() => HabitItemCreateOrConnectWithoutGroupInputObjectSchema).array()]).optional(), upsert: z.union([z.lazy(() => HabitItemUpsertWithWhereUniqueWithoutGroupInputObjectSchema),
    z.lazy(() => HabitItemUpsertWithWhereUniqueWithoutGroupInputObjectSchema).array()]).optional(), createMany: z.lazy(() => HabitItemCreateManyGroupInputEnvelopeObjectSchema).optional().optional(), set: z.union([z.lazy(() => HabitItemWhereUniqueInputObjectSchema),
    z.lazy(() => HabitItemWhereUniqueInputObjectSchema).array()]).optional(), disconnect: z.union([z.lazy(() => HabitItemWhereUniqueInputObjectSchema),
    z.lazy(() => HabitItemWhereUniqueInputObjectSchema).array()]).optional(), delete: z.union([z.lazy(() => HabitItemWhereUniqueInputObjectSchema),
    z.lazy(() => HabitItemWhereUniqueInputObjectSchema).array()]).optional(), connect: z.union([z.lazy(() => HabitItemWhereUniqueInputObjectSchema),
    z.lazy(() => HabitItemWhereUniqueInputObjectSchema).array()]).optional(), update: z.union([z.lazy(() => HabitItemUpdateWithWhereUniqueWithoutGroupInputObjectSchema),
    z.lazy(() => HabitItemUpdateWithWhereUniqueWithoutGroupInputObjectSchema).array()]).optional(), updateMany: z.union([z.lazy(() => HabitItemUpdateManyWithWhereWithoutGroupInputObjectSchema),
    z.lazy(() => HabitItemUpdateManyWithWhereWithoutGroupInputObjectSchema).array()]).optional(), deleteMany: z.union([z.lazy(() => HabitItemScalarWhereInputObjectSchema),
    z.lazy(() => HabitItemScalarWhereInputObjectSchema).array()]).optional()
}).strict() as SchemaType;
