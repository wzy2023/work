/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { UserAccountSelectObjectSchema } from '../objects/UserAccountSelect.schema';
import { UserAccountIncludeObjectSchema } from '../objects/UserAccountInclude.schema';
import { UserAccountWhereUniqueInputObjectSchema } from '../objects/UserAccountWhereUniqueInput.schema';
import { UserAccountWhereInputObjectSchema } from '../objects/UserAccountWhereInput.schema';
import { UserAccountOrderByWithRelationInputObjectSchema } from '../objects/UserAccountOrderByWithRelationInput.schema';
import { UserAccountScalarFieldEnumSchema } from '../enums/UserAccountScalarFieldEnum.schema';
import { UserAccountCreateInputObjectSchema } from '../objects/UserAccountCreateInput.schema';
import { UserAccountUncheckedCreateInputObjectSchema } from '../objects/UserAccountUncheckedCreateInput.schema';
import { UserAccountCreateManyInputObjectSchema } from '../objects/UserAccountCreateManyInput.schema';
import { UserAccountUpdateInputObjectSchema } from '../objects/UserAccountUpdateInput.schema';
import { UserAccountUncheckedUpdateInputObjectSchema } from '../objects/UserAccountUncheckedUpdateInput.schema';
import { UserAccountUpdateManyMutationInputObjectSchema } from '../objects/UserAccountUpdateManyMutationInput.schema';
import { UserAccountUncheckedUpdateManyInputObjectSchema } from '../objects/UserAccountUncheckedUpdateManyInput.schema';
import { UserAccountCountAggregateInputObjectSchema } from '../objects/UserAccountCountAggregateInput.schema';
import { UserAccountMinAggregateInputObjectSchema } from '../objects/UserAccountMinAggregateInput.schema';
import { UserAccountMaxAggregateInputObjectSchema } from '../objects/UserAccountMaxAggregateInput.schema';
import { UserAccountAvgAggregateInputObjectSchema } from '../objects/UserAccountAvgAggregateInput.schema';
import { UserAccountSumAggregateInputObjectSchema } from '../objects/UserAccountSumAggregateInput.schema';
import { UserAccountOrderByWithAggregationInputObjectSchema } from '../objects/UserAccountOrderByWithAggregationInput.schema';
import { UserAccountScalarWhereWithAggregatesInputObjectSchema } from '../objects/UserAccountScalarWhereWithAggregatesInput.schema'

type UserAccountInputSchemaType = {
    findUnique: z.ZodType<Prisma.UserAccountFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.UserAccountFindFirstArgs>,
    findMany: z.ZodType<Prisma.UserAccountFindManyArgs>,
    create: z.ZodType<Prisma.UserAccountCreateArgs>,
    createMany: z.ZodType<Prisma.UserAccountCreateManyArgs>,
    delete: z.ZodType<Prisma.UserAccountDeleteArgs>,
    deleteMany: z.ZodType<Prisma.UserAccountDeleteManyArgs>,
    update: z.ZodType<Prisma.UserAccountUpdateArgs>,
    updateMany: z.ZodType<Prisma.UserAccountUpdateManyArgs>,
    upsert: z.ZodType<Prisma.UserAccountUpsertArgs>,
    aggregate: z.ZodType<Prisma.UserAccountAggregateArgs>,
    groupBy: z.ZodType<Prisma.UserAccountGroupByArgs>,
    count: z.ZodType<Prisma.UserAccountCountArgs>
}

export const UserAccountInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), where: UserAccountWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), where: UserAccountWhereInputObjectSchema.optional(), orderBy: z.union([UserAccountOrderByWithRelationInputObjectSchema, UserAccountOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserAccountWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserAccountScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), where: UserAccountWhereInputObjectSchema.optional(), orderBy: z.union([UserAccountOrderByWithRelationInputObjectSchema, UserAccountOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserAccountWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserAccountScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), data: z.union([UserAccountCreateInputObjectSchema, UserAccountUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([UserAccountCreateManyInputObjectSchema, z.array(UserAccountCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), where: UserAccountWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: UserAccountWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), data: z.union([UserAccountUpdateInputObjectSchema, UserAccountUncheckedUpdateInputObjectSchema]), where: UserAccountWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([UserAccountUpdateManyMutationInputObjectSchema, UserAccountUncheckedUpdateManyInputObjectSchema]), where: UserAccountWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => UserAccountSelectObjectSchema.optional()), include: z.lazy(() => UserAccountIncludeObjectSchema.optional()), where: UserAccountWhereUniqueInputObjectSchema, create: z.union([UserAccountCreateInputObjectSchema, UserAccountUncheckedCreateInputObjectSchema]), update: z.union([UserAccountUpdateInputObjectSchema, UserAccountUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: UserAccountWhereInputObjectSchema.optional(), orderBy: z.union([UserAccountOrderByWithRelationInputObjectSchema, UserAccountOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserAccountWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), UserAccountCountAggregateInputObjectSchema]).optional(), _min: UserAccountMinAggregateInputObjectSchema.optional(), _max: UserAccountMaxAggregateInputObjectSchema.optional(), _avg: UserAccountAvgAggregateInputObjectSchema.optional(), _sum: UserAccountSumAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: UserAccountWhereInputObjectSchema.optional(), orderBy: z.union([UserAccountOrderByWithAggregationInputObjectSchema, UserAccountOrderByWithAggregationInputObjectSchema.array()]).optional(), having: UserAccountScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(UserAccountScalarFieldEnumSchema), _count: z.union([z.literal(true), UserAccountCountAggregateInputObjectSchema]).optional(), _min: UserAccountMinAggregateInputObjectSchema.optional(), _max: UserAccountMaxAggregateInputObjectSchema.optional(), _avg: UserAccountAvgAggregateInputObjectSchema.optional(), _sum: UserAccountSumAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: UserAccountWhereInputObjectSchema.optional(), orderBy: z.union([UserAccountOrderByWithRelationInputObjectSchema, UserAccountOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserAccountWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(UserAccountScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), UserAccountCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as UserAccountInputSchemaType;
